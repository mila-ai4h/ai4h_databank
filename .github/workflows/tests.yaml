name: Tests

on: [push, pull_request]

jobs:
  tests:
    runs-on: ubuntu-latest
    environment: development
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: black linter
        uses: psf/black@stable
        with:
          options: "--check --diff --line-length 120"
      - name: isort
        run: |
          pip install isort
          isort --profile black --check-only .
      # TODO: Add some unit tests
      # - name: unit tests
      #   env:
      #     OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      #   run: |
      #     python3 -m pip install --upgrade pip
      #     pip install -r requirements.txt
      #     pytest
      # This is so that the heroku secrets get saved encrypted on the docker image
      # - name: install Pass
      #   run: sudo apt-get install pass jq moreutils -y && jq '. + {"credsStore":"pass"}' $HOME/.docker/config.json | sponge $HOME/.docker/config.json && cat $HOME/.docker/config.json
       # echo '{"credsStore" :"pass"}' >> /home/runner/.docker/config.json && cat /home/runner/.docker/config.json
      - name: Deploy to Heroku
      - uses: akhileshns/heroku-deploy@v3.12.13 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{secrets.HEROKU_DEV_SERVER}}
          heroku_email: ${{secrets.HEROKU_EMAIL}}
      # - name: Deploy to Heroku
      #   env:
      #     HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
      #   with:
      #     heroku_app_name: 'github-actions-heroku-develop'
      #     heroku_email: 'zafarsaleem3@gmail.com'
      #   run: heroku container:login && heroku git:remote -a ai4h-databank-dev && git push heroku $(git symbolic-ref --short HEAD):main
        # run: heroku login && cat /home/runner/.docker/config.json
